{"ast":null,"code":"var _jsxFileName = \"/Users/goktugkarabulut/Documents/cinemorph/src/components/all-film/allFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './allfilm.css';\nimport MovieModal from '../movieModal';\nimport FilmSvg from '../assets/film';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(dateString) {\n  const options = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString('en-US', options);\n}\nfunction AllFilms() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [videoKey, setVideoKey] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filmCount, setFilmCount] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`);\n        if (currentPage !== page) {\n          setMovies(prevMovies => {\n            const newMovies = [...prevMovies, ...response.data.results.slice(prevMovies.length, prevMovies.length + filmCount)];\n            return newMovies;\n          });\n          setCurrentPage(page);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [API_KEY, page, filmCount, currentPage]);\n  useEffect(() => {\n    const fetchVideoKey = async () => {\n      if (!selectedMovie) return;\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}`);\n        const videos = response.data.results;\n        if (videos.length > 0) {\n          const firstVideoKey = videos[0].key;\n          setVideoKey(firstVideoKey);\n        } else {\n          setVideoKey(null);\n        }\n      } catch (error) {\n        console.error('Error fetching video key:', error);\n        setVideoKey(null);\n      }\n    };\n    fetchVideoKey();\n  }, [selectedMovie, API_KEY]);\n  const openModal = movie => {\n    setSelectedMovie(movie);\n    setIsModalOpen(true);\n    document.getElementById('overlay').classList.add('active');\n  };\n  const closeModal = () => {\n    setSelectedMovie(null);\n    setIsModalOpen(false);\n    setVideoKey(null);\n    document.getElementById('overlay').classList.remove('active');\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.keyCode === 27) {\n        closeModal();\n      }\n    };\n    if (isModalOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-films-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"all-films-title\",\n      children: [/*#__PURE__*/_jsxDEV(FilmSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 39\n      }, this), \"All Films\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        onClick: () => openModal(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"all-movie-poster\",\n          src: `https://image.tmdb.org/t/p/w780/${movie.poster_path}`,\n          alt: `${movie.title} Poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"all-movie-title\",\n            children: `${movie.title}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"all-movie-release-date\",\n            children: formatDate(movie.release_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), isModalOpen && selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      movie: selectedMovie,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"load-more-button\",\n        onClick: loadMore,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(AllFilms, \"tUojjB5v01sqE4iI0bAOO6JJZws=\");\n_c = AllFilms;\nexport default AllFilms;\nvar _c;\n$RefreshReg$(_c, \"AllFilms\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieModal","FilmSvg","jsxDEV","_jsxDEV","formatDate","dateString","options","month","day","year","Date","toLocaleDateString","AllFilms","_s","movies","setMovies","selectedMovie","setSelectedMovie","isModalOpen","setIsModalOpen","videoKey","setVideoKey","page","setPage","isLoading","setIsLoading","filmCount","setFilmCount","currentPage","setCurrentPage","API_KEY","process","env","REACT_APP_TMDB_API_KEY","fetchMovies","response","get","prevMovies","newMovies","data","results","slice","length","error","console","fetchVideoKey","id","videos","firstVideoKey","key","openModal","movie","document","getElementById","classList","add","closeModal","remove","handleKeyDown","event","keyCode","addEventListener","removeEventListener","loadMore","prevPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","alt","title","release_date","onClose","_c","$RefreshReg$"],"sources":["/Users/goktugkarabulut/Documents/cinemorph/src/components/all-film/allFilm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './allfilm.css';\nimport MovieModal from '../movieModal';\nimport FilmSvg from '../assets/film';\n\nfunction formatDate(dateString) {\n  const options = { month: 'short', day: 'numeric', year: 'numeric' };\n  return new Date(dateString).toLocaleDateString('en-US', options);\n}\n\nfunction AllFilms() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [videoKey, setVideoKey] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filmCount, setFilmCount] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`);\n        if (currentPage !== page) {\n          setMovies(prevMovies => {\n            const newMovies = [...prevMovies, ...response.data.results.slice(prevMovies.length, prevMovies.length + filmCount)];\n            return newMovies;\n          });\n          setCurrentPage(page);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [API_KEY, page, filmCount, currentPage]);\n\n  useEffect(() => {\n    const fetchVideoKey = async () => {\n      if (!selectedMovie) return;\n\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}`);\n        const videos = response.data.results;\n        if (videos.length > 0) {\n          const firstVideoKey = videos[0].key;\n          setVideoKey(firstVideoKey);\n        } else {\n          setVideoKey(null);\n        }\n      } catch (error) {\n        console.error('Error fetching video key:', error);\n        setVideoKey(null);\n      }\n    };\n\n    fetchVideoKey();\n  }, [selectedMovie, API_KEY]);\n\n  const openModal = (movie) => {\n    setSelectedMovie(movie);\n    setIsModalOpen(true);\n    document.getElementById('overlay').classList.add('active'); \n  };\n  \n  const closeModal = () => {\n    setSelectedMovie(null);\n    setIsModalOpen(false);\n    setVideoKey(null); \n    document.getElementById('overlay').classList.remove('active'); \n  };\n  \n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 27) { \n        closeModal();\n      }\n    };\n  \n    if (isModalOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div className=\"all-films-content\">\n      <h2 className='all-films-title'><FilmSvg />All Films</h2>\n      <div className=\"all-movie-list\">\n        {movies.map(movie => (\n          <div key={movie.id} className=\"movie\" onClick={() => openModal(movie)}>\n            <img\n              className=\"all-movie-poster\"\n              src={`https://image.tmdb.org/t/p/w780/${movie.poster_path}`}\n              alt={`${movie.title} Poster`}\n            />\n            <div className='all-movie-details'> \n              <h3 className='all-movie-title'>{`${movie.title}`}</h3>\n              <p className='all-movie-release-date'>{formatDate(movie.release_date)}</p>\n            </div>        \n          </div>\n        ))}\n      </div>\n      {isModalOpen && selectedMovie && (\n        <MovieModal movie={selectedMovie} onClose={closeModal} />\n      )}\n      <div className=\"load-more-container\">\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <button className=\"load-more-button\" onClick={loadMore}>Load More</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AllFilms;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}