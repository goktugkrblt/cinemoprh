{"ast":null,"code":"var _jsxFileName = \"/Users/goktugkarabulut/Documents/cinemorph/src/components/popular-film/popularFilm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './popularfilm.css';\nimport MovieModal from '../movieModal';\nimport FilmSvg from '../assets/film';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(dateString) {\n  const options = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString('en-US', options);\n}\nfunction PopularFilm() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [videoKey, setVideoKey] = useState(null);\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  useEffect(() => {\n    const fetchPopularMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}`);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching popular movies:', error);\n      }\n    };\n    fetchPopularMovies();\n  }, [API_KEY]);\n  useEffect(() => {\n    const fetchVideoKey = async () => {\n      if (!selectedMovie) return;\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}`);\n        const videos = response.data.results;\n        if (videos.length > 0) {\n          const firstVideoKey = videos[0].key;\n          setVideoKey(firstVideoKey);\n        } else {\n          setVideoKey(null);\n        }\n      } catch (error) {\n        console.error('Error fetching video key:', error);\n        setVideoKey(null);\n      }\n    };\n    fetchVideoKey();\n  }, [selectedMovie, API_KEY]);\n  const openModal = movie => {\n    setSelectedMovie(movie);\n    setIsModalOpen(true);\n    document.getElementById('overlay').classList.add('active');\n  };\n  const closeModal = () => {\n    setSelectedMovie(null);\n    setIsModalOpen(false);\n    setVideoKey(null);\n    document.getElementById('overlay').classList.remove('active');\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.keyCode === 27) {\n        closeModal();\n      }\n    };\n    if (isModalOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popular-film-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"popular-film-title\",\n      children: [/*#__PURE__*/_jsxDEV(FilmSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 42\n      }, this), \"What's Popular\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        onClick: () => openModal(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popular-movie-poster\",\n          src: `https://image.tmdb.org/t/p/w780/${movie.poster_path}`,\n          alt: `${movie.title} Poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popular-movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"popular-movie-title\",\n            children: `${movie.title}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"popular-movie-release-date\",\n            children: formatDate(movie.release_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isModalOpen && selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      movie: selectedMovie,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(PopularFilm, \"iyVm4IUxgWfv1QLT2lhfBLarrmU=\");\n_c = PopularFilm;\nexport default PopularFilm;\nvar _c;\n$RefreshReg$(_c, \"PopularFilm\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieModal","FilmSvg","jsxDEV","_jsxDEV","formatDate","dateString","options","month","day","year","Date","toLocaleDateString","PopularFilm","_s","movies","setMovies","selectedMovie","setSelectedMovie","isModalOpen","setIsModalOpen","videoKey","setVideoKey","API_KEY","process","env","REACT_APP_TMDB_API_KEY","fetchPopularMovies","response","get","data","results","error","console","fetchVideoKey","id","videos","length","firstVideoKey","key","openModal","movie","document","getElementById","classList","add","closeModal","remove","handleKeyDown","event","keyCode","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","alt","title","release_date","onClose","_c","$RefreshReg$"],"sources":["/Users/goktugkarabulut/Documents/cinemorph/src/components/popular-film/popularFilm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './popularfilm.css';\nimport MovieModal from '../movieModal'; \nimport FilmSvg from '../assets/film';\n\nfunction formatDate(dateString) {\n  const options = { month: 'short', day: 'numeric', year: 'numeric' };\n  return new Date(dateString).toLocaleDateString('en-US', options);\n}\n\nfunction PopularFilm() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [videoKey, setVideoKey] = useState(null); \n\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\n  useEffect(() => {\n    const fetchPopularMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}`);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching popular movies:', error);\n      }\n    };\n\n    fetchPopularMovies();\n  }, [API_KEY]);\n\n  useEffect(() => {\n    const fetchVideoKey = async () => {\n      if (!selectedMovie) return;\n\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${selectedMovie.id}/videos?api_key=${API_KEY}`);\n        const videos = response.data.results;\n        if (videos.length > 0) {\n          const firstVideoKey = videos[0].key;\n          setVideoKey(firstVideoKey);\n        } else {\n          setVideoKey(null);\n        }\n      } catch (error) {\n        console.error('Error fetching video key:', error);\n        setVideoKey(null);\n      }\n    };\n\n    fetchVideoKey();\n  }, [selectedMovie, API_KEY]);\n\n  const openModal = (movie) => {\n    setSelectedMovie(movie);\n    setIsModalOpen(true);\n    document.getElementById('overlay').classList.add('active'); \n  };\n  \n  const closeModal = () => {\n    setSelectedMovie(null);\n    setIsModalOpen(false);\n    setVideoKey(null); \n    document.getElementById('overlay').classList.remove('active'); \n  };\n  \n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 27) { \n        closeModal();\n      }\n    };\n  \n   \n  \n    if (isModalOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n  \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isModalOpen]);\n\n  return (\n    <div className=\"popular-film-content\">\n      <h2 className='popular-film-title'><FilmSvg />What's Popular</h2>\n      <div className=\"popular-movie-list\">\n        {movies.map(movie => (\n          <div key={movie.id} className=\"movie\" onClick={() => openModal(movie)}>\n            <img\n              className=\"popular-movie-poster\"\n              src={`https://image.tmdb.org/t/p/w780/${movie.poster_path}`}\n              alt={`${movie.title} Poster`}\n            />\n            <div className='popular-movie-details'> \n              <h3 className='popular-movie-title'>{`${movie.title}`}</h3>\n              <p className='popular-movie-release-date'>{formatDate(movie.release_date)}</p>\n            </div>        \n          </div>\n        ))}\n      </div>\n      {/* MovieModal bileşenini burada kullanıyoruz */}\n      {isModalOpen && selectedMovie && (\n        <MovieModal movie={selectedMovie} onClose={closeModal} />\n      )}\n    </div>\n  );\n}\n\nexport default PopularFilm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}